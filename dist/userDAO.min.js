var MongoClient,ObjectID,Q,authenticate,collection,createUser,getDB,retrieveUser,retrieveUserById,retrieveUserByLogin,retrieveUsers,saveUser,updateUser,updateUserTokens;Q=require("q"),MongoClient=require("mongodb").MongoClient,ObjectID=require("mongodb").ObjectID,collection="users",getDB=function(e){return MongoClient.connect(process.env.MONGOLAB_URI,function(r,t){if(r)throw r;return e(t)})},saveUser=function(e){return void 0===e._id?createUser(e):updateUser(e)},createUser=function(e){var r;return r=Q.defer(),getDB(function(t){return t.collection(collection).insert(e,function(n,o){return t.close(),n?r.reject(new Error(n)):(e._id=o.insertedIds[0],r.resolve(e))})}),r.promise},updateUser=function(e){var r,t;return r=Q.defer(),t={_id:e._id},getDB(function(n){return n.collection(collection).update(t,e,function(t){return n.close(),t?(console.log("err: ",t),r.reject(new Error(t))):r.resolve(e)})}),r.promise},updateUserTokens=function(e,r,t){var n,o;return o={_id:new ObjectID(e)},n={$set:{}},n.$set["providers."+r+".tokens"]=t,getDB(function(e){return e.collection(collection).updateOne(o,n,{upsert:!1},function(t){return e.close(),t?console.log("err: ",t):console.log("update token for provider "+r+" OK")})})},retrieveUsers=function(){var e;return e=Q.defer(),getDB(function(r){return r.collection(collection).find({}).toArray(function(t,n){return r.close(),t?e.reject(new Error(t)):e.resolve(n)})}),e.promise},retrieveUserByLogin=function(e){var r;return r={login:e},retrieveUser(r)},retrieveUserById=function(e){var r;return r={_id:new ObjectID(e)},retrieveUser(r)},retrieveUser=function(e){var r;return r=Q.defer(),getDB(function(t){return t.collection(collection).findOne(e,function(e,n){return t.close(),e?r.reject(new Error(e)):r.resolve(n)})}),r.promise},authenticate=function(e,r){var t;return t=Q.defer(),getDB(function(n){return n.collection(collection).findOne({login:e,password:r},function(e,r){return n.close(),e?t.reject(new Error(e)):null===r?t.reject("no user found"):t.resolve(r)})}),t.promise},exports.deleteToken=function(e,r){var t;return t=Q.defer(),getDB(function(n){var o,i;return o={_id:new ObjectID(r)},i={$unset:{}},i.$unset["providers."+e+".tokens"]="",n.collection(collection).update(o,i,function(e,r){return n.close(),e?t.reject(new Error(e)):t.resolve(r.result.n)})}),t.promise},exports.saveUser=saveUser,exports.retrieveUsers=retrieveUsers,exports.updateUserTokens=updateUserTokens,exports.authenticate=authenticate,exports.retrieveUserByLogin=retrieveUserByLogin,exports.retrieveUserById=retrieveUserById;