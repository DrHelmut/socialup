var MongoClient,ObjectID,Promise,UserDAO,collection,createUser,getDB,retrieveUser,updateUser;Promise=require("bluebird"),MongoClient=require("mongodb").MongoClient,ObjectID=require("mongodb").ObjectID,collection="users",getDB=function(e){return MongoClient.connect(process.env.MONGOLAB_URI,function(r,n){if(r)throw r;return e(n)})},createUser=function(e){var r;return r=Promise.pending(),getDB(function(n){return n.collection(collection).insert(e,function(o,t){return n.close(),o?r.reject(new Error(o)):(e._id=t.insertedIds[0],r.resolve(e))})}),r.promise},updateUser=function(e){var r,n;return r=Promise.pending(),n={_id:e._id},getDB(function(o){return o.collection(collection).update(n,e,function(n){return o.close(),n?(console.log("err: ",n),r.reject(new Error(n))):r.resolve(e)})}),r.promise},retrieveUser=function(e){var r;return r=Promise.pending(),getDB(function(n){return n.collection(collection).findOne(e,function(e,o){return n.close(),e?r.reject(new Error(e)):r.resolve(o)})}),r.promise},module.exports=UserDAO=function(){function e(){}return e.prototype.saveUser=function(e){return void 0===e._id?createUser(e):updateUser(e)},e.prototype.updateUserTokens=function(e,r,n){var o,t;return t={_id:new ObjectID(e)},o={$set:{}},o.$set["providers."+r+".tokens"]=n,getDB(function(e){return e.collection(collection).updateOne(t,o,{upsert:!1},function(n){return e.close(),n?console.log("err: ",n):console.log("update token for provider "+r+" OK")})})},e.prototype.retrieveUsers=function(){var e;return e=Promise.pending(),getDB(function(r){return r.collection(collection).find({}).toArray(function(n,o){return r.close(),n?e.reject(new Error(n)):e.resolve(o)})}),e.promise},e.prototype.retrieveUserByLogin=function(e){var r;return r={login:e},retrieveUser(r)},e.prototype.retrieveUserById=function(e){var r;return r={_id:new ObjectID(e)},retrieveUser(r)},e.prototype.authenticate=function(e,r){var n;return n=Promise.pending(),getDB(function(o){return o.collection(collection).findOne({login:e,password:r},function(e,r){return o.close(),e?n.reject(new Error(e)):null===r?n.reject("no user found"):n.resolve(r)})}),n.promise},e.prototype.deleteToken=function(e,r){var n;return n=Promise.pending(),getDB(function(o){var t,i;return t={_id:new ObjectID(r)},i={$unset:{}},i.$unset["providers."+e+".tokens"]="",o.collection(collection).update(t,i,function(e,r){return o.close(),e?n.reject(new Error(e)):n.resolve(r.result.n)})}),n.promise},e}();